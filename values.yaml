# Values for a simple wordpress app
# If you happened to stumble by this helm chart, I strongly advise you to use the official one instead.

replicaCount: 1

namespaceName: "wordpress"

secretsName: "mysql-access-data"

#set to true if deploying in minikube (mostly needed for persistent storage hacks)
minikubeCompat: true 

minikubeNodeAffinity:
  nodeAffinity:
      required:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values: 
            - minikube


#set this to define a root password for mysql. Otherwise, one will be autogenerated on first install
mysqlPassword:
#mysql db name. Will be "wordpress" if this is unset
mysqlDbName:
#mysql user to connect as. Will be root if unset
mysqlDbUser:

mysqlImage:
  repository: mysql
  tag: "latest"

wordpressImage:
  repository: wordpress
  pullPolicy: IfNotPresent
  tag: "latest"

nameOverride: 
  wordpress: wordpress
  mysql: mysql

fullnameOverride: 
  wordpress: wordpress-app
  mysql: mysql-db

mysqlService:
  name: wordpress-mysql-svc
  type: ClusterIP
  port: 3306

wordpressService:
  name: wordpress-svc
  type: NodePort
  targetPort: 80
  nodePort: 31002

resourcesMySQL: 
  requests:
    cpu: 100m
    memory: 128Mi
  limits: 
    cpu: 250m
    memory: 1Gi

resourcesWordpress: 
  requests:
    cpu: 250m
    memory: 256Mi
  limits: 
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 80

storage:
  persistentStorageEnabled: true
  mysql:
    persistentVolumeName: mysql-pv
    persistentVolumeClaimName: mysql-pvc
    capacity: 512Mi
    storagePath: /tmp/tempmysql
  wordpress:
    persistentVolumeName: wordpress-pv
    persistentVolumeClaimName: wordpress-pvc
    capacity: 256Mi
    storagePath: /tmp/tempwordpress
